<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.neo.util</groupId>
        <artifactId>neoutil-root</artifactId>
        <version>1.0.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <artifactId>neoutil-elastic</artifactId>
    <version>1.0.0</version>

    <name>Neo Util Framework Elastic JAR</name>
    <packaging>jar</packaging>

    <properties>
        <elastic.version>8.7.0</elastic.version>
    </properties>

    <dependencies>
        <!-- Internal Modules -->
        <dependency>
            <groupId>com.neo.util</groupId>
            <artifactId>neoutil-framework</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- Module specific -->
        <dependency>
            <groupId>co.elastic.clients</groupId>
            <artifactId>elasticsearch-java</artifactId>
            <version>${elastic.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.elasticsearch.test</groupId>
            <artifactId>framework</artifactId>
            <version>${elastic.version}</version>
            <scope>test</scope>
            <!-- Exlusion to avoid (incompatible types: inferred type does not conform to upper bound(s)) issue for mock
                test -->
            <exclusions>
                <exclusion>
                    <groupId>org.elasticsearch</groupId>
                    <artifactId>securemock</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch.plugin</groupId>
            <artifactId>transport-netty4</artifactId>
            <version>${elastic.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <!-- Need to use System class loader, else will hit into jar hell issue caused by maven sure fire plugin -->
                    <useSystemClassLoader>true</useSystemClassLoader>
                    <!-- -Dtests.security.manager=false is needed otherwise the ESTestCase fails to initialize -->
                    <argLine>-Xms384m -Xmx2g -XX:+HeapDumpOnOutOfMemoryError
                        -Dtests.security.manager=false
                        --enable-preview</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>