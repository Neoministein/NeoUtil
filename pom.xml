<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.neo.util</groupId>
	<artifactId>neoutil-root</artifactId>
	<version>1.0.0</version>
	<name>Neo Util Root POM</name>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<!-- Jakarta -->
		<jakarta.persistence-api.version>3.1.0</jakarta.persistence-api.version>
		<jakarta.enterprise.cdi-api.version>4.0.1</jakarta.enterprise.cdi-api.version>
		<jakarta.annotation-api.version>2.1.1</jakarta.annotation-api.version>
		<jakarta.transaction-api.version>2.0.1</jakarta.transaction-api.version>
		<jakarta.ws.rs-api.version>3.1.0</jakarta.ws.rs-api.version>
		<jakarta.security.enterprise-api.version>3.0.0</jakarta.security.enterprise-api.version>
		<jakarta.validation.version>3.0.2</jakarta.validation.version>
		<jakarta.websocket.version>2.1.0</jakarta.websocket.version>

		<!-- Logging -->
		<slf4j.version>2.0.7</slf4j.version>
		<log4j.version>2.20.0</log4j.version>

		<!-- Class Generation -->
		<javapoet.version>1.13.0</javapoet.version>

		<!-- Reflection -->
		<jandex.version>3.1.5</jandex.version>
		<jandex.plugin.version>3.1.5</jandex.plugin.version>
		<org.reflections.version>0.10.2</org.reflections.version>

		<!-- Jackson -->
		<jackson.version>2.15.2</jackson.version>
		<json-schema-generator.version>4.31.1</json-schema-generator.version>
		<json-schema-validator.version>1.0.84</json-schema-validator.version>

		<jobrunr.version>6.2.2-neoutil</jobrunr.version>
		<!-- Caching -->
		<caffeine.version>3.1.5</caffeine.version>

		<!-- MP Implementation -->
		<helidon.version>4.0.0</helidon.version>
		<!-- Testing -->
		<junit.version>5.9.3</junit.version>
		<mockito.version>5.3.1</mockito.version>
		<h2.version>2.2.224</h2.version>
		<weld.version>5.1.0.Final</weld.version>
		<weld-junit.version>4.0.0.Final</weld-junit.version>
		<jboss.classfilewriter.version>1.2.5.Final</jboss.classfilewriter.version> <!-- This is due to @Transactional not working on 1.2.4.Final -->

		<!-- Maven -->
		<maven.core.version>3.9.4</maven.core.version>
		<maven.tools.version>3.9.0</maven.tools.version>
		<maven.plugin.plugin.version>3.9.0</maven.plugin.plugin.version>
		<surefire.version>3.1.2</surefire.version>
		<build-helper-maven-plugin.version>3.4.0</build-helper-maven-plugin.version>
		<compiler.plugin.version>3.11.0</compiler.plugin.version>
		<plexus-utils.version>3.5.0</plexus-utils.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<configuration>
					<source>21</source>
					<target>21</target>
					<compilerArgs>--enable-preview</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.smallrye</groupId>
				<artifactId>jandex-maven-plugin</artifactId>
				<version>${jandex.plugin.version}</version>
				<executions>
					<execution>
						<id>make-index</id>
						<goals>
							<goal>jandex</goal>
						</goals>
						<phase>process-classes</phase>
						<configuration>
							<indexDir>${project.build.directory}/classes/META-INF</indexDir>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}/classes/</directory>
								</fileSet>
							</fileSets>
						</configuration>
					</execution>
					<execution>
						<id>make-index-test</id>
						<goals>
							<goal>jandex</goal>
						</goals>
						<phase>process-test-classes</phase>
						<configuration>
							<indexDir>${project.build.directory}/test-classes/META-INF</indexDir>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}/test-classes/</directory>
								</fileSet>
							</fileSets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>integration</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${surefire.version}</version>
						<configuration>
							<!-- the 2gb of memory are needed by the tests of resource optimization -->
							<argLine>-Xms384m -Xmx4g -XX:+HeapDumpOnOutOfMemoryError -XX:-OmitStackTraceInFastThrow --enable-preview</argLine>
							<includes>
								<include>**/Test*.java</include>
								<include>**/*Test.java</include>
								<include>**/*TestCase.java</include>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<modules>
		<module>tools</module>
		<module>unfork/jobrunr</module>
		<module>common</module>
		<module>framework</module>
		<module>jakarta/maven-plugin</module>
		<module>jakarta/startup</module>
		<module>jakarta/elastic</module>
		<module>jakarta/database</module>
		<module>jakarta/database-audit</module>
		<module>jakarta/rest</module>
		<module>jakarta/websocket</module>
		<module>jakarta/request-recording-searchable</module>
		<module>jakarta/jobrunr</module>
		<module>jakarta/jobrunr-queue</module>
		<module>jakarta/jobrunr-scheduler</module>
		<module>jakarta/cache-caffeine</module>
		<module>microprofile</module>
		<module>helidon</module>
	</modules>
</project>